/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package prg381milestone2;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.sql.SQLException;
import java.util.Date;
import java.text.SimpleDateFormat;


public class MainFrame extends javax.swing.JFrame {

    /**
     * Creates new form MainFrame
     */
    public MainFrame() {
        initComponents();
        
        FormTabPane.setUI(new javax.swing.plaf.basic.BasicTabbedPaneUI() {
        @Override
        protected int calculateTabAreaHeight(int tabPlacement, int horizRunCount, int maxTabHeight) {
            return 0;
        }
    });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        FormTabPane = new javax.swing.JTabbedPane();
        Hometab = new javax.swing.JPanel();
        AppointmentTab = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        AppointmentTable = new javax.swing.JTable();
        txtStudentAP = new javax.swing.JTextField();
        txtCounselorAP = new javax.swing.JTextField();
        txtTime = new javax.swing.JTextField();
        txtStatus = new javax.swing.JTextField();
        btnAddAppointment = new javax.swing.JButton();
        btnViewAppointment = new javax.swing.JButton();
        btnUpdateAppointment = new javax.swing.JButton();
        btnDeleteAppointment = new javax.swing.JButton();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        CounselorTab = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtCounselor = new javax.swing.JTextField();
        txtSpecialization = new javax.swing.JTextField();
        txtAvailability = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        CounselorTB = new javax.swing.JTable();
        btnAddCounselor = new javax.swing.JButton();
        btnUpdateCounselor = new javax.swing.JButton();
        btnRemoveCounselor = new javax.swing.JButton();
        btnViewCounselor = new javax.swing.JButton();
        FeedbackTab = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtRating = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        FeedbackTB = new javax.swing.JTable();
        jLabel8 = new javax.swing.JLabel();
        txtStudentFB = new javax.swing.JTextField();
        btnAddFeedback = new javax.swing.JButton();
        btnEditFeedback = new javax.swing.JButton();
        btnRemoveFeedback = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtAreaComments = new javax.swing.JTextArea();
        btnViewFeedback = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        HomeNav = new javax.swing.JButton();
        AppointmentsNav = new javax.swing.JButton();
        CounselorsNav = new javax.swing.JButton();
        FeedbackNav = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout HometabLayout = new javax.swing.GroupLayout(Hometab);
        Hometab.setLayout(HometabLayout);
        HometabLayout.setHorizontalGroup(
            HometabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 612, Short.MAX_VALUE)
        );
        HometabLayout.setVerticalGroup(
            HometabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 369, Short.MAX_VALUE)
        );

        FormTabPane.addTab("tab1", Hometab);

        jLabel9.setText("Appointment Managment");

        jLabel10.setText("Student:");

        jLabel11.setText("Counselor:");

        jLabel12.setText("Date:");

        jLabel13.setText("Time:");

        jLabel14.setText("Status:");

        AppointmentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Student", "Counselor", "Date", "Time", "Status"
            }
        ));
        AppointmentTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                AppointmentTableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(AppointmentTable);

        btnAddAppointment.setText("ADD");
        btnAddAppointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddAppointmentActionPerformed(evt);
            }
        });

        btnViewAppointment.setText("VIEW");
        btnViewAppointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewAppointmentActionPerformed(evt);
            }
        });

        btnUpdateAppointment.setText("UPDATE");
        btnUpdateAppointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateAppointmentActionPerformed(evt);
            }
        });

        btnDeleteAppointment.setText("DELETE");
        btnDeleteAppointment.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteAppointmentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout AppointmentTabLayout = new javax.swing.GroupLayout(AppointmentTab);
        AppointmentTab.setLayout(AppointmentTabLayout);
        AppointmentTabLayout.setHorizontalGroup(
            AppointmentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AppointmentTabLayout.createSequentialGroup()
                .addGroup(AppointmentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(AppointmentTabLayout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(AppointmentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(AppointmentTabLayout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtStudentAP))
                            .addGroup(AppointmentTabLayout.createSequentialGroup()
                                .addGroup(AppointmentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(AppointmentTabLayout.createSequentialGroup()
                                        .addGroup(AppointmentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(34, 34, 34))
                                    .addGroup(AppointmentTabLayout.createSequentialGroup()
                                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGroup(AppointmentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jDateChooser1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtTime)
                                    .addComponent(txtStatus)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, AppointmentTabLayout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(txtCounselorAP)))))
                        .addGap(76, 76, 76)
                        .addGroup(AppointmentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnAddAppointment)
                            .addComponent(btnUpdateAppointment)))
                    .addGroup(AppointmentTabLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(65, 65, 65)
                .addGroup(AppointmentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnViewAppointment)
                    .addComponent(btnDeleteAppointment))
                .addGap(96, 96, 96))
            .addGroup(AppointmentTabLayout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 612, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        AppointmentTabLayout.setVerticalGroup(
            AppointmentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(AppointmentTabLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addGroup(AppointmentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtStudentAP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(AppointmentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AppointmentTabLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(AppointmentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(txtCounselorAP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(AppointmentTabLayout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addGroup(AppointmentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAddAppointment)
                            .addComponent(btnViewAppointment))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(AppointmentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(AppointmentTabLayout.createSequentialGroup()
                        .addComponent(jLabel12)
                        .addGap(18, 18, 18)
                        .addGroup(AppointmentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel13)
                            .addComponent(txtTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnUpdateAppointment)
                            .addComponent(btnDeleteAppointment))
                        .addGap(18, 18, 18)
                        .addGroup(AppointmentTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14)
                            .addComponent(txtStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(AppointmentTabLayout.createSequentialGroup()
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        FormTabPane.addTab("tab2", AppointmentTab);

        jLabel1.setText("Counselor Management");

        jLabel2.setText("Counselor:");

        jLabel3.setText("Specialization:");

        jLabel4.setText("Availability:");

        CounselorTB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Counselor", "Specialization", "Availability"
            }
        ));
        CounselorTB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CounselorTBMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(CounselorTB);

        btnAddCounselor.setText("ADD");
        btnAddCounselor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCounselorActionPerformed(evt);
            }
        });

        btnUpdateCounselor.setText("UPDATE");
        btnUpdateCounselor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateCounselorActionPerformed(evt);
            }
        });

        btnRemoveCounselor.setText("REMOVE");
        btnRemoveCounselor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveCounselorActionPerformed(evt);
            }
        });

        btnViewCounselor.setText("VIEW");
        btnViewCounselor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewCounselorActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout CounselorTabLayout = new javax.swing.GroupLayout(CounselorTab);
        CounselorTab.setLayout(CounselorTabLayout);
        CounselorTabLayout.setHorizontalGroup(
            CounselorTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CounselorTabLayout.createSequentialGroup()
                .addGroup(CounselorTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(CounselorTabLayout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addGroup(CounselorTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(CounselorTabLayout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtAvailability, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(CounselorTabLayout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(33, 33, 33)
                                .addComponent(txtCounselor, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(CounselorTabLayout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtSpecialization, javax.swing.GroupLayout.PREFERRED_SIZE, 153, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(CounselorTabLayout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addGroup(CounselorTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnAddCounselor, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnUpdateCounselor, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(CounselorTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(CounselorTabLayout.createSequentialGroup()
                                .addGap(68, 68, 68)
                                .addComponent(btnRemoveCounselor))
                            .addGroup(CounselorTabLayout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addComponent(btnViewCounselor, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(51, 51, 51)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(CounselorTabLayout.createSequentialGroup()
                        .addGap(227, 227, 227)
                        .addComponent(jLabel1)))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        CounselorTabLayout.setVerticalGroup(
            CounselorTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(CounselorTabLayout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(CounselorTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(CounselorTabLayout.createSequentialGroup()
                        .addGroup(CounselorTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtCounselor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(CounselorTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSpecialization, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(34, 34, 34)
                        .addGroup(CounselorTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtAvailability, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(45, 45, 45)
                        .addGroup(CounselorTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAddCounselor)
                            .addComponent(btnViewCounselor)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 35, Short.MAX_VALUE)
                .addGroup(CounselorTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnUpdateCounselor)
                    .addComponent(btnRemoveCounselor))
                .addGap(50, 50, 50))
        );

        FormTabPane.addTab("tab3", CounselorTab);

        jLabel5.setText("Feedback Managment");

        jLabel6.setText("Rating:");

        jLabel7.setText("Comments:");

        FeedbackTB.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Students", "Ratings", "Comments"
            }
        ));
        FeedbackTB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                FeedbackTBMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(FeedbackTB);

        jLabel8.setText("Student:");

        btnAddFeedback.setText("ADD");
        btnAddFeedback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddFeedbackActionPerformed(evt);
            }
        });

        btnEditFeedback.setText("EDIT");
        btnEditFeedback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditFeedbackActionPerformed(evt);
            }
        });

        btnRemoveFeedback.setText("REMOVE");
        btnRemoveFeedback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveFeedbackActionPerformed(evt);
            }
        });

        txtAreaComments.setColumns(20);
        txtAreaComments.setRows(5);
        jScrollPane3.setViewportView(txtAreaComments);

        btnViewFeedback.setText("VIEW");
        btnViewFeedback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewFeedbackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout FeedbackTabLayout = new javax.swing.GroupLayout(FeedbackTab);
        FeedbackTab.setLayout(FeedbackTabLayout);
        FeedbackTabLayout.setHorizontalGroup(
            FeedbackTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FeedbackTabLayout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(FeedbackTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(FeedbackTabLayout.createSequentialGroup()
                        .addGroup(FeedbackTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(FeedbackTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtRating)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 205, Short.MAX_VALUE)
                            .addComponent(txtStudentFB))))
                .addGroup(FeedbackTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(FeedbackTabLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(12, Short.MAX_VALUE))
                    .addGroup(FeedbackTabLayout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(FeedbackTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAddFeedback)
                            .addComponent(btnRemoveFeedback))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(FeedbackTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnEditFeedback)
                            .addComponent(btnViewFeedback))
                        .addGap(44, 44, 44))))
            .addGroup(FeedbackTabLayout.createSequentialGroup()
                .addGap(242, 242, 242)
                .addComponent(jLabel5)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        FeedbackTabLayout.setVerticalGroup(
            FeedbackTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(FeedbackTabLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(FeedbackTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(FeedbackTabLayout.createSequentialGroup()
                        .addGroup(FeedbackTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(txtStudentFB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(FeedbackTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txtRating, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(36, 36, 36)
                        .addGroup(FeedbackTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)))
                    .addGroup(FeedbackTabLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                        .addGroup(FeedbackTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAddFeedback)
                            .addComponent(btnEditFeedback))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addGroup(FeedbackTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRemoveFeedback)
                    .addComponent(btnViewFeedback))
                .addGap(21, 21, 21))
        );

        FormTabPane.addTab("tab4", FeedbackTab);

        jPanel1.setBackground(new java.awt.Color(100, 100, 100));

        HomeNav.setText("Home");
        HomeNav.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HomeNavActionPerformed(evt);
            }
        });

        AppointmentsNav.setText("Appointments");
        AppointmentsNav.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AppointmentsNavActionPerformed(evt);
            }
        });

        CounselorsNav.setText("Counselors");
        CounselorsNav.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CounselorsNavActionPerformed(evt);
            }
        });

        FeedbackNav.setText("Feedback");
        FeedbackNav.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FeedbackNavActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(AppointmentsNav, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CounselorsNav, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(HomeNav, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(FeedbackNav, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(HomeNav)
                .addGap(43, 43, 43)
                .addComponent(AppointmentsNav)
                .addGap(43, 43, 43)
                .addComponent(CounselorsNav)
                .addGap(41, 41, 41)
                .addComponent(FeedbackNav)
                .addGap(40, 40, 40))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(FormTabPane, javax.swing.GroupLayout.PREFERRED_SIZE, 612, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(FormTabPane)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void HomeNavActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HomeNavActionPerformed
         FormTabPane.setSelectedIndex(0);
    }//GEN-LAST:event_HomeNavActionPerformed

    private void AppointmentsNavActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AppointmentsNavActionPerformed
        FormTabPane.setSelectedIndex(1);
    }//GEN-LAST:event_AppointmentsNavActionPerformed

    private void CounselorsNavActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CounselorsNavActionPerformed
      FormTabPane.setSelectedIndex(2);
    }//GEN-LAST:event_CounselorsNavActionPerformed

    private void FeedbackNavActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FeedbackNavActionPerformed
       FormTabPane.setSelectedIndex(3);
    }//GEN-LAST:event_FeedbackNavActionPerformed

    // Functionality for the FEEDBACK form:
    
    private void btnAddFeedbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddFeedbackActionPerformed
        String student = txtStudentFB.getText();
        String rating = txtRating.getText();
        String comment = txtAreaComments.getText();
        
        int rate = Integer.parseInt(rating);
           if(student.isEmpty() || rating.isEmpty() || comment.isEmpty())
            {
               
               JOptionPane.showMessageDialog(this, 
                       "Please enter all fields",
                       "Error",
                       JOptionPane.ERROR_MESSAGE);
           }
           else if(rate <1 || rate >5)
           {
               JOptionPane.showMessageDialog(this,"Rating must be between 1 and 5.");
               return;
           }
           else{
               DB.addFB(student, rate, comment);
                btnViewFeedbackActionPerformed(null); 
           }
    }//GEN-LAST:event_btnAddFeedbackActionPerformed

    private void btnViewFeedbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewFeedbackActionPerformed
       DefaultTableModel model = (DefaultTableModel) FeedbackTB.getModel();
       model.setRowCount(0);
       for(Object[] row : DB.Feedbackview()){
           model.addRow(row);
       }
    }//GEN-LAST:event_btnViewFeedbackActionPerformed

    private void FeedbackTBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_FeedbackTBMouseClicked
        int SelectedRow = FeedbackTB.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) FeedbackTB.getModel();
        
        txtStudentFB.setText(model.getValueAt(SelectedRow,0).toString());
        txtRating.setText(model.getValueAt(SelectedRow,1).toString());
        txtAreaComments.setText(model.getValueAt(SelectedRow,2).toString());
    }//GEN-LAST:event_FeedbackTBMouseClicked

    private void btnRemoveFeedbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveFeedbackActionPerformed
        String student = txtStudentFB.getText().trim();
        String rating = txtRating.getText().trim();
        String comment = txtAreaComments.getText().trim();
        int confirm = JOptionPane.showConfirmDialog(this,
                "Are you sure you want to delete this entry?",
                "Condirm Delete",
                JOptionPane.YES_NO_OPTION);
        if(confirm != JOptionPane.YES_OPTION){
            return;
        }
        
        try{
            int RA = DB.DeleteFB(student, rating, comment);
            if(RA > 0){
                JOptionPane.showMessageDialog(this,"Feedback removed!");
                txtStudentFB.setText("");
                txtRating.setText("");
                txtAreaComments.setText("");
                 
                btnViewFeedbackActionPerformed(null);
            }
            else{
                JOptionPane.showMessageDialog(this,"No record found to delete.");
            }
        }
        catch(NumberFormatException ex){
            ex.printStackTrace();
             JOptionPane.showMessageDialog(this,"Raring must be a valid number.");
        }
    }//GEN-LAST:event_btnRemoveFeedbackActionPerformed

    private void btnEditFeedbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditFeedbackActionPerformed
        String student = txtStudentFB.getText();
        String comment = txtAreaComments.getText();
        
        int rating = 0;
        try{
            rating = Integer.parseInt(txtRating.getText());
            if(rating < 1 || rating >5){
                 JOptionPane.showMessageDialog(this, "Rating must be between 1 and 5!");
                 return;
            }          
        }catch(NumberFormatException ex){
             JOptionPane.showMessageDialog(this, "Invalid rating value!");
             return;
        }
        DB.UpdateFB(student, rating, comment);
        btnViewFeedbackActionPerformed(null);
    }//GEN-LAST:event_btnEditFeedbackActionPerformed

    // Functionality for the Counselor form:
    
    private void btnAddCounselorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCounselorActionPerformed
        String counselor = txtCounselor.getText();
        String specialization = txtSpecialization.getText();
        String availability = txtAvailability.getText();
        
        if (counselor.isEmpty() || specialization.isEmpty() || availability.isEmpty())
        {
            JOptionPane.showMessageDialog(this, 
                    "Please enter all fields",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
        }else{
            DB.addCounselor(counselor, specialization, availability);
            btnViewCounselorActionPerformed(null);
            
        }
    }//GEN-LAST:event_btnAddCounselorActionPerformed

    private void btnViewCounselorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewCounselorActionPerformed
        DefaultTableModel model = (DefaultTableModel) CounselorTB.getModel();
        model.setRowCount(0);
        for (String[] row : DB.viewCounselors()){
            model.addRow(row);
        }
    }//GEN-LAST:event_btnViewCounselorActionPerformed

    private void btnUpdateCounselorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateCounselorActionPerformed
       String counselor = txtCounselor.getText();
        String specialization = txtSpecialization.getText();
        String availability = txtAvailability.getText();
        
        DB.updateCounselor(counselor, specialization, availability);
        btnViewCounselorActionPerformed(null);
        System.out.println("Update clicked: " + counselor + " updated to " + specialization + ", " + availability);
    }//GEN-LAST:event_btnUpdateCounselorActionPerformed

    private void btnRemoveCounselorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveCounselorActionPerformed
        String counselor = txtCounselor.getText();
        DB.removeCounselor(counselor);
        btnViewCounselorActionPerformed(null);
        System.out.println("Delete clicked: " + counselor);
    }//GEN-LAST:event_btnRemoveCounselorActionPerformed

    private void CounselorTBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CounselorTBMouseClicked
        int SelectedRow = CounselorTB.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) CounselorTB.getModel();
        
        txtCounselor.setText(model.getValueAt(SelectedRow,0).toString());
        txtSpecialization.setText(model.getValueAt(SelectedRow,1).toString());
        txtAvailability.setText(model.getValueAt(SelectedRow,2).toString());
    }//GEN-LAST:event_CounselorTBMouseClicked

    private void btnAddAppointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddAppointmentActionPerformed
        
        String studentName = txtStudentAP.getText();
        String counselorName = txtCounselorAP.getText();
        java.util.Date selectedDate = jDateChooser1.getDate();
        String apptTime = txtTime.getText();
        String status = txtStatus.getText();
        
        if(selectedDate == null || studentName.isEmpty() || counselorName.isEmpty() || apptTime.isEmpty() || status.isEmpty())
        {
            JOptionPane.showMessageDialog(this,
                    "Please enter all fields",
                    "Error",
                    JOptionPane.ERROR_MESSAGE);
        }else{
             java.sql.Date apptDate = new java.sql.Date(selectedDate.getTime());
            DB.addAP(studentName, counselorName, apptDate, apptTime, status);
            btnViewAppointmentActionPerformed(null);
             
        }
        
    }//GEN-LAST:event_btnAddAppointmentActionPerformed

    private void btnViewAppointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewAppointmentActionPerformed
         DefaultTableModel model = (DefaultTableModel) AppointmentTable.getModel();
               model.setRowCount(0);
               for(String[] row : DB.AppointmentView()){
                   model.addRow(row);
               }
    }//GEN-LAST:event_btnViewAppointmentActionPerformed

    private void btnUpdateAppointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateAppointmentActionPerformed
        
        String studentName = txtStudentAP.getText();
        String counselorName = txtCounselorAP.getText();
        java.util.Date selectedDate = jDateChooser1.getDate();
        String apptTime = txtTime.getText();
        String status = txtStatus.getText();
        java.sql.Date apptDate = new java.sql.Date(selectedDate.getTime());
        DB.updateAppointment(studentName, counselorName, apptDate, apptTime, status);
        btnViewAppointmentActionPerformed(null);
    }//GEN-LAST:event_btnUpdateAppointmentActionPerformed

    private void btnDeleteAppointmentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteAppointmentActionPerformed
         String studentName = txtStudentAP.getText();
         DB.deleteAppointment(studentName);
         btnViewAppointmentActionPerformed(null);
    }//GEN-LAST:event_btnDeleteAppointmentActionPerformed

    private void AppointmentTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_AppointmentTableMouseClicked
        int SelectedRow = AppointmentTable.getSelectedRow();
        DefaultTableModel model = (DefaultTableModel) AppointmentTable.getModel();
        
        txtStudentAP.setText(model.getValueAt(SelectedRow,0).toString());
        txtCounselorAP.setText(model.getValueAt(SelectedRow,1).toString());
        try{
          String date  = model.getValueAt(SelectedRow,2).toString();
          SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
          Date d = formatter.parse(date);
          jDateChooser1.setDate(d);
        }catch(Exception ex){
            ex.printStackTrace();
        }
        txtTime.setText(model.getValueAt(SelectedRow,3).toString());
        txtStatus.setText(model.getValueAt(SelectedRow,4).toString());
    }//GEN-LAST:event_AppointmentTableMouseClicked

    public static DBConnection DB = new DBConnection();
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainFrame().setVisible(true);
                try
                {
                DB.connect();
                //DB.createFeedbackTable();
                //DB.createCounselorsTable();
                }catch(ClassNotFoundException ex){
                ex.printStackTrace();
                }
            }
            
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel AppointmentTab;
    private javax.swing.JTable AppointmentTable;
    private javax.swing.JButton AppointmentsNav;
    private javax.swing.JTable CounselorTB;
    private javax.swing.JPanel CounselorTab;
    private javax.swing.JButton CounselorsNav;
    private javax.swing.JButton FeedbackNav;
    private javax.swing.JTable FeedbackTB;
    private javax.swing.JPanel FeedbackTab;
    private javax.swing.JTabbedPane FormTabPane;
    private javax.swing.JButton HomeNav;
    private javax.swing.JPanel Hometab;
    private javax.swing.JButton btnAddAppointment;
    private javax.swing.JButton btnAddCounselor;
    private javax.swing.JButton btnAddFeedback;
    private javax.swing.JButton btnDeleteAppointment;
    private javax.swing.JButton btnEditFeedback;
    private javax.swing.JButton btnRemoveCounselor;
    private javax.swing.JButton btnRemoveFeedback;
    private javax.swing.JButton btnUpdateAppointment;
    private javax.swing.JButton btnUpdateCounselor;
    private javax.swing.JButton btnViewAppointment;
    private javax.swing.JButton btnViewCounselor;
    private javax.swing.JButton btnViewFeedback;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextArea txtAreaComments;
    private javax.swing.JTextField txtAvailability;
    private javax.swing.JTextField txtCounselor;
    private javax.swing.JTextField txtCounselorAP;
    private javax.swing.JTextField txtRating;
    private javax.swing.JTextField txtSpecialization;
    private javax.swing.JTextField txtStatus;
    private javax.swing.JTextField txtStudentAP;
    private javax.swing.JTextField txtStudentFB;
    private javax.swing.JTextField txtTime;
    // End of variables declaration//GEN-END:variables
}
